===== Siguiente cosa a hacer =====
Optimizar y refactorizar

 >> IDEAS OPTIMIZACION <<
Reducir llamadas sql comprobando si el string esta vacio




--- CONTACTOS ---
-Personas: ID, Nombre, Direccion, Notas, Aficiones, Correo, Telefono,  FechaNac, Apellidos, Genero
-Empresas: ID, Nombre, Direccion, Notas, Correo, Telefono, 
-Mascotas: ID, Nombre, Direccion, Notas, FechaNac

Varias  por contacto: correo, telefono, aficiones






--- TABLAS ---

Contactos (IDcontacto, TipoContacto, Nombre, Direccion, Notas, Apellidos, Genero, FechaNac)
Correos (IDcorreo, Correo)
Telefonos (IDtelefono, Telefono)
Aficiones (IDaficion, Aficion)

ContactosAficiones (IDcontacto, IDaficion)
ContactosCorreos (IDcontacto, IDcorreo)
ContactosTelefonos (IDcontacto, IDtelefono)

SELECT correo FROM correos WHERE IDcorreo = (SELECT IDcorreo FROM ContactosCorreos WHERE IDcontacto = )



--- SENTENCIAS SQL ---


CREATE TABLE CONTACTOS(
IDCONTACTO INTEGER PRIMARY KEY AUTOINCREMENT, 
TIPOCONTACTO CHAR(1),
NOMBRE VARCHAR (20),
DIRECCION VARCHAR (40),
NOTAS VARCHAR (50),
APELLIDOS VARCHAR (40),
GENERO CHAR(1),
FECHANAC CHAR(10));
CREATE TABLE CORREOS( IDCORREO INTEGER PRIMARY KEY AUTOINCREMENT, CORREO VARCHAR(40));
CREATE TABLE TELEFONOS (IDTELEFONO INTEGER PRIMARY KEY AUTOINCREMENT, TELEFONO NUMBER(10));
CREATE TABLE AFICIONES (IDAFICION INTEGER PRIMARY KEY AUTOINCREMENT, AFICION VARCHAR(20));
CREATE TABLE CONTACTOSAFICIONES (IDCONTACTO NUMBER(4),
IDAFICION NUMBER(4), 
FOREIGN KEY(IDCONTACTO) REFERENCES CONTACTOS(IDCONTACTO),
FOREIGN KEY(IDAFICION) REFERENCES AFICION(IDAFICION));
CREATE TABLE CONTACTOSCORREOS (IDCONTACTO NUMBER(4),
IDCORREO NUMBER(4), 
FOREIGN KEY(IDCONTACTO) REFERENCES CONTACTOS(IDCONTACTO),
FOREIGN KEY(IDCORREO) REFERENCES CORREOS(IDCORREOS));
CREATE TABLE CONTACTOSTELEFONOS (
    IDCONTACTO NUMBER(4),
    IDTELEFONO NUMBER(4), 
    FOREIGN KEY(IDCONTACTO) REFERENCES CONTACTOS(IDCONTACTO),
    FOREIGN KEY(IDTELEFONO) REFERENCES TELEFONOS(IDTELEFONO));


















